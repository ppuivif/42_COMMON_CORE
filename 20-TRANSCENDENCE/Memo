bonus = 25% xp

équipe 1 : front + jeu

équipe 2 : back + devops + db

jeu dans le front
(interface user, requêtes HTTP pour enregistrement des données stockées
en base de données dont systeme d'authenfication si log)

voir fonctionnement du systeme de routeur pour SPA (single page application) : 
partie front

API pour dissocier back et front

framework Django (couches) en Python
couche de validation de la requête (avec endpoints)
service
couche d'interrogation de(s) la db
(https://www.django-rest-framework.org)

architecture en microservices


Overview
• Web
◦ Major module: Use a Framework as backend.				oui (equipe 2)
◦ Minor module: Use a front-end framework or toolkit.			oui (equipe 1 - front)
◦ Minor module: Use a database for the backend.				oui (equipe 2)
◦ Major module: Store the score of a tournament in the Blockchain.	non-non

• User Management
◦ Major module: Standard user management, authentication, users across	oui
tournaments.
◦ Major module: Implementing a remote authentication.			oui (bonus éventuel)
Gameplay and user experience (voir 2 personnes)

validé ici par Henri



◦ Major module: Remote players						non                                                                                                      
◦ Major module: Multiplayers (more than 2 in the same game).		non
◦ Major module: Add Another Game with User History and Matchmaking.	oui/non (equipe 1 - jeu)
◦ Minor module: Game Customization Options.				oui/non (equipe 1 - jeu)
◦ Major module: Live chat.						non

• AI-Algo
◦ Major module: Introduce an AI Opponent.				oui/non (equipe 1 - jeu)
◦ Minor module: User and Game Stats Dashboards				non

• Cybersecurity
◦ Major module: Implement WAF/ModSecurity with Hardened Configuration
and HashiCorp Vault for Secrets Management.				non
◦ Minor module: GDPR Compliance Options with User Anonymization, Local	non
Data Management, and Account Deletion.
◦ Major module: Implement Two-Factor Authentication (2FA) and JWT.	Laura (equipe 2)

• Devops
◦ Major module: Infrastructure Setup for Log Management.		non
◦ Minor module: Monitoring system.					non
◦ Major module: Designing the Backend as Microservices.			oui (si API) (equipe 2)

• Graphics
◦ Major module: Use of advanced 3D techniques.				oui/non

• Accessibility
◦ Minor module: Support on all devices.					oui
◦ Minor module: Expanding Browser Compatibility.			oui (auto)
◦ Minor module: Multiple language supports.				non (à la mano)
◦ Minor module: Add accessibility for Visually Impaired Users.		non
◦ Minor module: Server-Side Rendering (SSR) Integration.		non

• Server-Side Pong
◦ Major module: Replacing Basic Pong with Server-Side Pong and Imple-	non-non
menting an API.
◦ Major module: Enabling Pong Gameplay via CLI against Web Users with	non
API Integration.
