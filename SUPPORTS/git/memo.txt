https://www.youtube.com/watch?v=tRZGeaHPoaw

-----------------------------------------------------------------------------------------------

Git est un système libre de gestion de sources (fichiers par ex.) soit un SCM (Source Control
Management).
	- gestion des modifications de fichiers en temps réel,
	- la possibilite de visualiser quels ont été les changements,
	- possibilité de comparer différentes versions,
	- possibilité de retour	en arrière.

Pour l'installer : https://www.git-scm.com/

Pour le configurer :
	- spécifier le nom d'utilisateur et l'adresse mail notamment pour le suivi
	des modifications :
		- git config --global user.name "Kevin Stratvert"
		- git config --global user.email kevinstratvertyoutube@outlook.com
	- configurer la branche par défaut (main) :
		- git config --global init.default branch main

	- initialiser le git dans le répertoire où sont stockés les fichiers sur le
	disque dur :
		- cd path
		- git init
		- un .git est créé dans le répertoire.
	- git status donne l'état du git :
		- les branches,
		- les fichiers (untracked pour l'instant).
7'55

Si les fichiers ont le status de untracked, et si des modifications sont effectuées sur ces
fichiers, cela n'aura aucune incidence sur le git.
En revanche, si ils ont le status de tracked, git saura quelles modifications ont été apportées
à quel fichier.	Dans ce cas, il sera possible de revenir à une version antérieure.

Pour track un fichier, il suffit de git add "nom_du_fichier".
Cette fois-ci, un git status montrera le fichier comme tracked.
A l'inverse, il est aussi possible de untrack un fichier en utilisant la commande :
git -rm --cache "nom_du_fichier"

Il est possible d'ignorer de façon systématique certains fichiers et/ou types de fichiers
et/ou dossiers.
Pour cela il faut créer un fichier texte puis le renommer .gitignore (en supprimant
l'extension). Il faut ensuite ouvrir le fichier avec un éditeur de texte.
Pour ignorer tous les fichiers texte par exemple : 
# ignore all.txt files //en-tête
*.txt
Il existe de nombreuses façon de créer des ignore : Cf. https://github.com/github/gitignore

Pour track tous les fichiers (hors ignored), il suffit de saisir git add --a ou git --add A ou
git add . (pour l'ensemble du répertoire).
Les fichiers sont désormais classés dans un environnement dit "staging".

Le commit consiste à prendre un snapshot du repository (dépôt) à un moment donné en conservant
les informations sur l'état des fichiers dans une "archive" (history book). Ce qui permettra
de revenir à cet état plus tard, en cas de besoin.

Pour commit : git commit -m "message" 

Si un des fichiers tracked est modifié aprés un commit, cette état de fait sera visible avec
un git status.

git diff permet de visualiser ce qui a été modifié.

Un git add "nom_du_fichier" permet d'ajouter le fichier modifié à la liste des fichiers qui
seront inscrits dans "l'archive". Il est en effet placé dans le staging, avant de le commit
éventuellement.

15'23

-----------------------------------------------------------------------------------------------



NB : git config -h pour afficher les options et leurs fonctionnalités
ou git help config pour obtenir une aide sur la fonction config via la manuel (accessible hors
ligne).

Github est une plateforme collaborative de stockage et d'échange de fichiers.


Pour créer une branche :
	- git branch "nom de la branche",
	- git branch pour afficher l'arborescence,
	- git switch "nom de la branche" pour se placer sur la branche
	

Pour effacer une branche :
	- git branch -d "nom de la branche",


Création d'une clé SSH :
ssh-keygen -t rsa -C papuivif@gmail.com
le path et le nom du fichier contenant la clé est défini par défaut mais peut être
modifié à l'invite

-----------------------------------------------------------------------------------------------




















git rm <directory> permet d'effacer le repertoire d'un git avant de repush
