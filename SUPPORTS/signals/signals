source CHATGPT

La fonction signal en langage C :

La fonction signal est utilisée pour la mise en place des gestionnaires de signaux.
Ces gestionnaires sont des fonctions qui permettent de gérer les évenements asynchrones ou les
signaux envoyés à un processus. 
Les signaux sont une forme de communication inter-processus utilisé dans les systèmes
d'exploitation de type UNIX. Ils permettent de notifier à un processus qu'un évènement
particulier s'est produit. 

-----------------------------------------------------------------------------------------------

La syntaxe :

#include <signal.h> 

void (*signal(int signum, void (*handler)(int)))(int);

-----------------------------------------------------------------------------------------------

Les paramètres :

int signum : c'est un int qui identifie les signal à gérer
eg : SIGINT pour le signal d'interruption (généralement associé à CTRL C)
SIQUIT pour le signal quitter (généralement associé à CTRL D ou CTRL \)

void (*handler)(int) : c'est un pointeur vers la fonction de gestion de signal. Cette fonction
doit prendre un int en argument, qui est le nombre lié au signal.

-----------------------------------------------------------------------------------------------

La valeur de retour :

La fonction signal retourne un pointeur vers le précédent gestionnaire de signal pour le signal
spécifié. Si le précédent gestionnaire a été paramétré a SIG_IGN ou SIG_DFL, la valeur de retour
en fait état.

-----------------------------------------------------------------------------------------------

Les gestionnaires de signal spécifiques :

- SIG_DFL : traitement par défaut du signal. L'action associée par défaut au signal est
exécutée.
- SIG_IGN : ignore le signal. Le signal est ignorée et le processus poursuit son exécution.

-----------------------------------------------------------------------------------------------

Les nombres liés aux signaux et les constantes :

Les signaux courants et les actions par défaut comprennent :
	- SIGINT (2) : interruption depuis le clavier (usuellement CTRL C). L'action par défaut
	est de mettre fin au processus.
	- SIGQUIT (3) : quitter depuis le clavier (usuellement CTRL \). L'action par défaut est
	de terminer le processus et de "vider le noyau".
	- SIGTERM (15) : signal de fin. L'action par défaut est de terminer le processus.
	- SIGKILL (9) : tue le signal. Ne peut être capturé ou ignoré. Termine le processus
	immédiatement.
	- SIGALARM (14) : signal d'alarme d'horloge (utilisé pour les timers). L'action par
	défaut est de terminer le processus.
	- SIGCHLD (17) : stop ou termine l'enfant. L'action par défaut est d'ignorer.



	
	



