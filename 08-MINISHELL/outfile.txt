#include "minishell.h"

char	*skip_first_spaces(char *str)
{
	while (str && str[0] == ' ')
		str++;
	return (str);
}


t_element parse_command_line(char *str)
{
	t_element	command_line;
	char		*remaining_line;	
	
	init_element_struct(&command_line);
	if (!str)
		return (command_line);
	remaining_line = skip_first_spaces(str);
	if (ft_strlen(remaining_line) == 0)
		return (command_line);
	parse_between_pipes(remaining_line);
	command_line.line = remaining_line;	
//	printf("%s\n", command_line.line);
	return (command_line);
}

t_element parse_between_pipes(char *str)
{
	t_element	command;
	char		*remaining_line;	

	init_element_struct(&command);
	if (!str)
		return (command);
	remaining_line = skip_first_spaces(str);
	if (ft_strlen(remaining_line) == 0)
		return (command);
	if (strchr(str, '|') != 0)
	while (str[0] && str[0] != '|')
	{
		str++;
		i++;
	}

	return (command);
}#include "minishell.h"

char	*skip_first_spaces(char *str)
{
	while (str && str[0] == ' ')
		str++;
	return (str);
}


t_element parse_command_line(char *str)
{
	t_element	command_line;
	char		*remaining_line;	
	
	init_element_struct(&command_line);
	if (!str)
		return (command_line);
	remaining_line = skip_first_spaces(str);
	if (ft_strlen(remaining_line) == 0)
		return (command_line);
	parse_between_pipes(remaining_line);
	command_line.line = remaining_line;	
//	printf("%s\n", command_line.line);
	return (command_line);
}

t_element parse_between_pipes(char *str)
{
	t_element	command;
	char		*remaining_line;	

	init_element_struct(&command);
	if (!str)
		return (command);
	remaining_line = skip_first_spaces(str);
	if (ft_strlen(remaining_line) == 0)
		return (command);
	if (strchr(str, '|') != 0)
	while (str[0] && str[0] != '|')
	{
		str++;
		i++;
	}

	return (command);
}