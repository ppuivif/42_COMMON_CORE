




La fonction cut_remaining_line_on_pipes permet de lire la totalité de remaining_line envoyé
par la fonction parse_command_line.
Elle retourne un status_code permettant de gérer l'exit_code.
Elle est appelée par la fonction parse_command_line (fichier parsing_substrings.c)
	 - remaining_line est lue dans une boucle avec des appels successifs à la fonction
	 parse_substrings.
	 - le retour de la fonction parse_substrings est lu. Si la valeur 2 est retournée, il
	 s'agit d'une erreur de syntaxe. Dans ce cas, la valeur de l'exit_code est modifiée, un
	 message est affiché ("syntax error"), la fontion termine la lecture et retourne 2.
	 - si le status_code est différent de 2, les whitespaces sont skip, et la fonction
	 is_pipe_latest_character (dans le fichier parsing_utils) vérifie qu'il n'y a pas de pipe
	 seul à la fin de remaining_line. Si c'est la cas, la valeur de l'exit_code est modifiée, un
	 message est affiché ("syntax error"), la fontion termine la lecture et retourne 2.

-----------------------------------------------------------------------------------------------

La fonction parse_substrings permet de créer chaque maillon de substring (contenu de
command_line compris entre les pipes) et de les ajouter à la liste chaînée.
Elle retourne un status_code permettant de gérer l'exit_code.
Elle est appelée par la fonction cut_remaining_line_on_pipes (fichier parsing_substrings.c).
	 - cette fonction commence par skip les whitespaces (elle déplace le pointeur sur la string
	 remaining_line),
	 - si la longueur de remaining_line est égale à 0, il n'y plus rien à lire et la fonction
	 retourne 0,
	 - si un pipe est trouvé en début de chaîne (grâce à la fonction is_pipe_first_character
	 dans le fichier parsing_utils), c'est une erreur de syntaxe et la fonction retourne 2.
	 ex : | ls
	 ex : ls || cat
	 - la fonction parse_substrings appelle la fonction get_arguments_and_redirections qui va
	 modifier remaining_line et le maillon substring,
	 - elle lit le retour de la fonction (status_code). Si le status_code est égal à 2, il
	 s'agit d'une erreur de syntaxe et la fonction free le maillon substring et retourne 2
	 elle aussi.
	 - si le status_code est différent de 2, la fonction ajoute par add_back le maillon à la
	 liste chaînée contenant les substring et retourne 0.

-----------------------------------------------------------------------------------------------

La fonction get_arguments_and_redirections permet de découper les substring en redirections et
arguments.
Elle modifie remaining_line et chaque maillon substring qui lui sont envoyés.
Elle lit remaining_line dans une boucle jusqu'au pipe.
Elle retourne un status_code permettant de gérer l'exit_code.
Elle est appelée par la fonction parse_substrings (fichier parsing_substrings.c).
	 - si un chevron est trouvé en premier caractère de remaining_line, elle appelle la
	 fonction get_redirections,
	 - sinon elle appelle la fonction get_arguments.
	 - elle lit le retour des fonctions (status_code). Si le status_code est différent de 0,
	 la lecture s'arrête et la fonction get_arguments_and_redirections retourne le status_code
	 de l'une ou l'autre des 2 fonctions,
	 - si les status_code sont égaux à 0, la fonction continue la lecture jusqu'au pipe.

-----------------------------------------------------------------------------------------------


